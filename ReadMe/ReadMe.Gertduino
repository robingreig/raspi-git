
1) Use nano to modify the .ino file

2) Use arduino-mk to create new .hex file


4) Gertduino LED pinouts:
D5  = Port 13 = PB5
D6  = Port 9  = PB1
D7  = Port 10 = PB2
D8  = Port 3  = PD3
D9  = Port 5  = PD5
D10 = Port 6  = PD6

5) Gertduino Switch pinouts:
B0 = Port ? = PC2
B1 = Port ? = PC3
***** Note they need pullups to work effectively

1) Install Raspbian Jessie Lite on the SD card

2) Run raspi-config
2.1) Normal install
2.2) Ensure SSH, SPI, and Serial are enabled on raspi-config

3) Adduser Robin & sudo visudo

4) Add Robin to adm, dialout, sudo, input, netdev, spi, i2c, gpio groups

5) exit & login as robin

6) sudo apt-get update & upgrade

7) sudo apt-get install arduino, arduino.mk, git, & minicom

8) ln -s /usr/share/arduino/Arduino.mk ~/Arduino.mk

9) remove "console-/tty/serial0" from /boot/cmdline.txt (sudo nano)

10) git clone https://github.com/robingreig/raspi-git

11) cp ./raspi-git/Drogon/Drogon_batch ~

12) chmod +x ./Drogon_batch & run it

13) To verify atmega328p connected: avrdude -p atmega328p -c gpio -v

14) cp -r ./raspi-git/Uno/Serial/Blink ~

15) cd ./Blink & remove build-cli (or build-uno)
15.1) Check the Makefile to see what processor (gertduin328 or uno)
15.2) run make to compile the program

16) Load the program into the gertduino: avrdude -p atmega328p -c gpio -v -U flash:w:./build-uno/Blink.hex:i

17) cd ~/raspi-git/Uno/Serial/BatteryMonitor.2016.06.30
17.1) Load the program into the gertduino: avrdude -p atmega328p -c gpio -v -U flash:w:./build-uno/BatteryMonitor.2016.06.30.hex:i

18) ln -s ./raspi-git/Python/VoltageRead/VoltageRead.py ~/VoltageRead.py
18.1) cd & run ./VoltageRead.py to ensure I can read all the analog inputs

19) run minicom -b 9600 -d /dev/serial0
19.1) Enter 0, 1, 2, 3, 4, 5 & see the resulting voltage returned, it should ingore all other inputs

20) ssh-keygen -t dsa

21) cp ./raspi-git/Raspi23/Uptime.sh ~
21.1) nano ./Uptime.sh & change scp lines to read for raspi15.local & -p81 raspi15.hopto.org 
21.2) touch ./uptime.txt & ./uptime.txt.tmp

22) scp ./.ssh/id_dsa.pub robin@raspi15.local:/home/robin/.ssh/authorized_key_Gertduino3
22.1) ssh robin@raspi15.local
22.2) cd .ssh & cat ./authorized_key_Gertduino3 >> ./authorized_keys
22.3) exit and login to verify no credentials needed
22.4) exit & test run ./Uptime.sh
22.5) crontab -e = 19 2 * * * /home/robin/Uptime.sh > /dev/null 2>&1

